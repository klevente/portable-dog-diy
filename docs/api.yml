# openapi: "3.0.2"
swagger: "2.0"
info:
  title: Punk API
  version: "2.0"

host: api.punkapi.com
basePath: /v2
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: "beer"
    description: "Operations related to beers"
paths:
  /beers:
    post:
      tags:
        - "beer"
      summary: "Add a new beer"
      operationId: "addBeer"
      parameters:
        - name: beer
          in: body
          required: true
          schema:
            $ref: "#/definitions/BeerAddRequest"
      responses:
        "200":
          description: "Successful addition"
        "400":
          description: "Invalid request"
    get:
      tags:
        - "beer"
      summary: "Get all beers"
      operationId: "getBeers"
      responses:
        "200":
          description: "Successful request"
          schema:
            $ref: "#/definitions/BeersResponse"
  /beers/{id}:
    get:
      tags:
        - "beer"
      summary: "Get beer with specified ID"
      operationId: "getBeerById"
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        "200":
          description: "Successful request"
          schema:
            $ref: "#/definitions/BeerResponse"
        "400":
          description: "Invalid ID format"
        "404":
          description: "Beer not found"
    put:
      tags:
        - "beer"
      summary: "Update beer with specified ID"
      operationId: "updateBeer"
      parameters:
        - name: id
          in: path
          required: true
          type: integer
        - name: beer
          in: body
          required: true
          schema:
            $ref: "#/definitions/BeerAddRequest"
      responses:
        "200":
          description: "Successful update"
        "400":
          description: "Invalid request"
        "404":
          description: "Beer not found"
    delete:
      tags:
        - "beer"
      summary: "Delete beer with specified ID"
      operationId: "deleteBeer"
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        "200":
          description: "Successful delete"
        "400":
          description: "Invalid ID format"
        "404":
          description: "Beer not found"

definitions:
  BeerAddRequest:
    type: object
    properties:
      name:
        type: string
      tagline:
        type: string
      description:
        type: string
      image_url:
        type: string
      abv:
        type: number
        format: double
      ibu:
        type: integer
      target_fg:
        type: integer
      target_og:
        type: integer
      volume:
        $ref: "#/definitions/Volume"
      boil_volume:
        $ref: "#/definitions/Volume"
      method:
        $ref: "#/definitions/Method"
      ingredients:
        $ref: "#/definitions/Ingredients"
    required:
      - name
      - tagline
      - description
      - image_url
      - abv
      - ibu
      - target_fg
      - target_og
      - volume
      - boil_volume
      - method
      - ingredients
  BeerResponse:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      tagline:
        type: string
      description:
        type: string
      image_url:
        type: string
      abv:
        type: number
        format: double
      ibu:
        type: integer
      target_fg:
        type: integer
      target_og:
        type: integer
      volume:
        $ref: "#/definitions/Volume"
      boil_volume:
        $ref: "#/definitions/Volume"
      method:
        $ref: "#/definitions/Method"
      ingredients:
        $ref: "#/definitions/Ingredients"
    required:
      - id
      - name
      - tagline
      - description
      - image_url
      - abv
      - ibu
      - target_fg
      - target_og
      - volume
      - boil_volume
      - method
      - ingredients
  BeersResponse:
    type: object
    properties:
      beers:
        type: array
        items:
          $ref: "#/definitions/BeerResponse"
    required:
      - beers
  Method:
    type: object
    properties:
      mash_temp:
        type: array
        items:
          $ref: "#/definitions/Mash"
      fermentation:
        $ref: "#/definitions/Fermentation"
    required:
      - mash_temp
      - fermentation
  Fermentation:
    type: object
    properties:
      temp:
        $ref: "#/definitions/Temperature"
    required:
      - temp
  Ingredients:
    type: object
    properties:
      malt:
        type: array
        items:
          $ref: "#/definitions/Malt"
      hops:
        type: array
        items:
          $ref: "#/definitions/Hop"
      yeast:
        type: string
    required:
      - malt
      - hops
      - yeast
  Malt:
    type: object
    properties:
      name:
        type: string
      amount:
        $ref: "#/definitions/Mass"
    required:
      - name
      - amount
  Hop:
    type: object
    properties:
      name:
        type: string
      amount:
        $ref: "#/definitions/Mass"
      add:
        type: string
    required:
      - name
      - amount
      - add
  Mash:
    type: object
    properties:
      temp:
        $ref: "#/definitions/Temperature"
      duration:
        type: integer
    required:
      - temp
      - duration
  Volume:
    type: object
    properties:
      value:
        type: number
        format: double
      unit:
        type: string
    required:
      - value
      - unit
  Temperature:
    type: object
    properties:
      value:
        type: number
        format: double
      unit:
        type: string
    required:
      - value
      - unit
  Mass:
    type: object
    properties:
      value:
        type: number
        format: double
      unit: 
        type: string
    required:
      - value
      - unit
